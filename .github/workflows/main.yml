name: CI
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: v14.x

      - name: Add MacOS certs
        if: matrix.os == 'macos-latest'
        run: chmod +x add-osx-cert.sh && ./add-osx-cert.sh
        env:
          MACOS_CERTIFICATE_APP: ${{ secrets.MACOS_CERTIFICATE_APP }}
          MACOS_CERTIFICATE_INST: ${{ secrets.MACOS_CERTIFICATE_INST }}
          MACOS_CERTIFICATE_APP_PWD: ${{ secrets.MACOS_CERTIFICATE_APP_PWD }}
          MACOS_CERTIFICATE_INST_PWD: ${{ secrets.MACOS_CERTIFICATE_INST_PWD }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install yarn
        run: npm i -g yarn@1.22.10
        
      - name: Install deps
        run: yarn install
      
      - name: Create .env file
        run: touch .env

      - name: Package
        run: yarn package
        env:
          APPLE_IDENTITY: ${{ secrets.APPLE_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          API_URL: ${{ secrets.API_URL }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Make
        run: yarn make --skip-package --write-results make_results.json
        env:
          APPLE_IDENTITY: ${{ secrets.APPLE_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          DEBUG: "*"

      - name: Publish
        run: yarn cli publish --from-make-results make_results.json
        env:
          NUCLEUS_HOST: ${{ secrets.NUCLEUS_HOST }}
          NUCLEUS_TOKEN: ${{ secrets.NUCLEUS_DEV_TOKEN }}
          NUCLEUS_APP_ID: ${{ secrets.NUCLEUS_APP_ID }}
          NUCLEUS_CHANNEL_ID: ${{ secrets.NUCLEUS_DEV_CHANNEL_ID }}

      - uses: actions/upload-artifact@v2
        with:
          name: build-result-${{ matrix.os }}
          path: out/prod/make/**/*.*
